<h1>Icons</h1>

<p>This page is made to feature the <code>ui-icon</code> component. While Font Awesome does a pretty good job of using unicode characters that screen readers won't read, I've added one manual example in the CSS of this Twiddle to show why this component is important.</p>

<h2>Example Uses</h2>
<p><span class="oi" data-glyph="kvh"></span> But therein lies the problem. You see, CSS is adding content to the DOM, via the content attribute on the <code>before</code> pseudo class. However, unless we tell it to skip that content, a screen reader will present it to the user. And since, in icon fonts, that content is often gibberish, we would like to avoid that. So if you want assistive technology to ignore an icon, you need the <code>aria-hidden</code> attribute <span aria-hidden="true">(Example: {{ui-icon 'globe'}} or {{ui-icon 'star'}})</span>. Alternatively, if you want a screen reader to state what that icon is for, then use the <code>aria-label</code> attribute to provide a description for the icon. The <code>ui-icon</code> component helps us, in that it will automatically add the <code>aria-hidden</code> attribute, but if we pass in an <code>aria-label</code> attribute, it will present that text to the user instead of the pseudo class content (Example: {{ui-icon 'trash' ariaLabel='Trash Can'}}, or {{ui-icon 'home' ariaLabel='Navigate to the Home Page'}}).</p>
